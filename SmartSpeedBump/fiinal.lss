
fiinal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000070e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  0000070e  00000782  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000040  00000000  00000000  00000786  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000009e  00000000  00000000  000007c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000542  00000000  00000000  00000864  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000280  00000000  00000000  00000da6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000639  00000000  00000000  00001026  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000c0  00000000  00000000  00001660  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001c1  00000000  00000000  00001720  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000411  00000000  00000000  000018e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  00001cf2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ee e0       	ldi	r30, 0x0E	; 14
  3a:	f7 e0       	ldi	r31, 0x07	; 7
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	a4 36       	cpi	r26, 0x64	; 100
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>
  48:	13 d0       	rcall	.+38     	; 0x70 <main>
  4a:	5f c3       	rjmp	.+1726   	; 0x70a <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <pwm_init>:
void pwm_init()
{



	TCCR2=0x69;	
  4e:	89 e6       	ldi	r24, 0x69	; 105
  50:	85 bd       	out	0x25, r24	; 37
	DDRB|=(1<<PB3);
  52:	bb 9a       	sbi	0x17, 3	; 23
}
  54:	08 95       	ret

00000056 <speed>:



void speed(uint8_t perc)
{
TCCR2=0x69;	
  56:	99 e6       	ldi	r25, 0x69	; 105
  58:	95 bd       	out	0x25, r25	; 37
	DDRB|=(1<<PB3);
  5a:	bb 9a       	sbi	0x17, 3	; 23

uint8_t duty;

duty = (perc - 0) * (255 - 160) / (100 - 0) + 160;
  5c:	9f e5       	ldi	r25, 0x5F	; 95
  5e:	89 9f       	mul	r24, r25
  60:	c0 01       	movw	r24, r0
  62:	11 24       	eor	r1, r1
  64:	64 e6       	ldi	r22, 0x64	; 100
  66:	70 e0       	ldi	r23, 0x00	; 0
  68:	b8 d2       	rcall	.+1392   	; 0x5da <__divmodhi4>
  6a:	60 56       	subi	r22, 0x60	; 96

        

	OCR2=duty;
  6c:	63 bd       	out	0x23, r22	; 35
	
}
  6e:	08 95       	ret

00000070 <main>:

#include "speed.h"


int main()
{
  70:	0f 93       	push	r16
  72:	1f 93       	push	r17
  74:	cf 93       	push	r28
  76:	df 93       	push	r29
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  78:	c0 e9       	ldi	r28, 0x90	; 144
  7a:	d1 e0       	ldi	r29, 0x01	; 1
			// rs(RIGHT SENSOR) : OUTPUT OF RIGHT SIDE SENSOR 

	while (1)
	{
	
	ls = read(portc,0);
  7c:	83 e0       	ldi	r24, 0x03	; 3
  7e:	90 e0       	ldi	r25, 0x00	; 0
  80:	60 e0       	ldi	r22, 0x00	; 0
  82:	70 e0       	ldi	r23, 0x00	; 0
  84:	8e d0       	rcall	.+284    	; 0x1a2 <read>
  86:	8c 01       	movw	r16, r24
	rs = read(portc,1);
  88:	83 e0       	ldi	r24, 0x03	; 3
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	61 e0       	ldi	r22, 0x01	; 1
  8e:	70 e0       	ldi	r23, 0x00	; 0
  90:	88 d0       	rcall	.+272    	; 0x1a2 <read>
	
		if(ls==1 && rs==1)
  92:	01 30       	cpi	r16, 0x01	; 1
  94:	11 05       	cpc	r17, r1
  96:	09 f0       	breq	.+2      	; 0x9a <main+0x2a>
  98:	5d c0       	rjmp	.+186    	; 0x154 <main+0xe4>
  9a:	01 97       	sbiw	r24, 0x01	; 1
  9c:	09 f0       	breq	.+2      	; 0xa0 <main+0x30>
  9e:	5d c0       	rjmp	.+186    	; 0x15a <main+0xea>
		{
				
		for(i=100;i<2000;i=i+100)  // BUZZER SWITCHES ON / OFF WITH INCREASING DELAY
		{
			write(portc,4,h);
  a0:	83 e0       	ldi	r24, 0x03	; 3
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	64 e0       	ldi	r22, 0x04	; 4
  a6:	70 e0       	ldi	r23, 0x00	; 0
  a8:	41 e0       	ldi	r20, 0x01	; 1
  aa:	50 e0       	ldi	r21, 0x00	; 0
  ac:	e6 d0       	rcall	.+460    	; 0x27a <write>
  ae:	88 ee       	ldi	r24, 0xE8	; 232
  b0:	93 e0       	ldi	r25, 0x03	; 3
  b2:	20 e9       	ldi	r18, 0x90	; 144
  b4:	31 e0       	ldi	r19, 0x01	; 1
  b6:	f9 01       	movw	r30, r18
  b8:	31 97       	sbiw	r30, 0x01	; 1
  ba:	f1 f7       	brne	.-4      	; 0xb8 <main+0x48>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  bc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  be:	d9 f7       	brne	.-10     	; 0xb6 <main+0x46>
			_delay_ms(i);
			write(portc,4,l);
  c0:	83 e0       	ldi	r24, 0x03	; 3
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	64 e0       	ldi	r22, 0x04	; 4
  c6:	70 e0       	ldi	r23, 0x00	; 0
  c8:	40 e0       	ldi	r20, 0x00	; 0
  ca:	50 e0       	ldi	r21, 0x00	; 0
  cc:	d6 d0       	rcall	.+428    	; 0x27a <write>
  ce:	88 ee       	ldi	r24, 0xE8	; 232
  d0:	93 e0       	ldi	r25, 0x03	; 3
  d2:	20 e9       	ldi	r18, 0x90	; 144
  d4:	31 e0       	ldi	r19, 0x01	; 1
  d6:	f9 01       	movw	r30, r18
  d8:	31 97       	sbiw	r30, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <main+0x68>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  dc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  de:	d9 f7       	brne	.-10     	; 0xd6 <main+0x66>
			_delay_ms(i);
			write(portb,all,h);  //switch on all leds
  e0:	82 e0       	ldi	r24, 0x02	; 2
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	69 e0       	ldi	r22, 0x09	; 9
  e6:	70 e0       	ldi	r23, 0x00	; 0
  e8:	41 e0       	ldi	r20, 0x01	; 1
  ea:	50 e0       	ldi	r21, 0x00	; 0
  ec:	c6 d0       	rcall	.+396    	; 0x27a <write>
  ee:	88 e8       	ldi	r24, 0x88	; 136
  f0:	93 e1       	ldi	r25, 0x13	; 19
  f2:	20 e9       	ldi	r18, 0x90	; 144
  f4:	31 e0       	ldi	r19, 0x01	; 1
  f6:	f9 01       	movw	r30, r18
  f8:	31 97       	sbiw	r30, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <main+0x88>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  fc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  fe:	d9 f7       	brne	.-10     	; 0xf6 <main+0x86>
			_delay_ms(500);
			write(portb,all,l); //switch off all leds
 100:	82 e0       	ldi	r24, 0x02	; 2
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	69 e0       	ldi	r22, 0x09	; 9
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	40 e0       	ldi	r20, 0x00	; 0
 10a:	50 e0       	ldi	r21, 0x00	; 0
 10c:	b6 d0       	rcall	.+364    	; 0x27a <write>
 10e:	88 e8       	ldi	r24, 0x88	; 136
 110:	93 e1       	ldi	r25, 0x13	; 19
 112:	20 e9       	ldi	r18, 0x90	; 144
 114:	31 e0       	ldi	r19, 0x01	; 1
 116:	f9 01       	movw	r30, r18
 118:	31 97       	sbiw	r30, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <main+0xa8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 11c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 11e:	d9 f7       	brne	.-10     	; 0x116 <main+0xa6>
			_delay_ms(500);
			
			write(portd,4,h); 
 120:	84 e0       	ldi	r24, 0x04	; 4
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	64 e0       	ldi	r22, 0x04	; 4
 126:	70 e0       	ldi	r23, 0x00	; 0
 128:	41 e0       	ldi	r20, 0x01	; 1
 12a:	50 e0       	ldi	r21, 0x00	; 0
 12c:	a6 d0       	rcall	.+332    	; 0x27a <write>
			write(portd,5,l);
 12e:	84 e0       	ldi	r24, 0x04	; 4
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	65 e0       	ldi	r22, 0x05	; 5
 134:	70 e0       	ldi	r23, 0x00	; 0
 136:	40 e0       	ldi	r20, 0x00	; 0
 138:	50 e0       	ldi	r21, 0x00	; 0
 13a:	9f d0       	rcall	.+318    	; 0x27a <write>
 13c:	88 e8       	ldi	r24, 0x88	; 136
 13e:	93 e1       	ldi	r25, 0x13	; 19
 140:	20 e9       	ldi	r18, 0x90	; 144
 142:	31 e0       	ldi	r19, 0x01	; 1
 144:	f9 01       	movw	r30, r18
 146:	31 97       	sbiw	r30, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <main+0xd6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 14a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 14c:	d9 f7       	brne	.-10     	; 0x144 <main+0xd4>
			_delay_ms(500);
			exit(0);
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	db d2       	rcall	.+1462   	; 0x70a <_exit>
		}
		
		}
		
		if(ls==1||rs==1)
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	09 f0       	breq	.+2      	; 0x15a <main+0xea>
 158:	91 cf       	rjmp	.-222    	; 0x7c <main+0xc>
		{
		write(portc,4,l);
 15a:	83 e0       	ldi	r24, 0x03	; 3
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	64 e0       	ldi	r22, 0x04	; 4
 160:	70 e0       	ldi	r23, 0x00	; 0
 162:	40 e0       	ldi	r20, 0x00	; 0
 164:	50 e0       	ldi	r21, 0x00	; 0
 166:	89 d0       	rcall	.+274    	; 0x27a <write>
		write(portd,4,l); 
 168:	84 e0       	ldi	r24, 0x04	; 4
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	64 e0       	ldi	r22, 0x04	; 4
 16e:	70 e0       	ldi	r23, 0x00	; 0
 170:	40 e0       	ldi	r20, 0x00	; 0
 172:	50 e0       	ldi	r21, 0x00	; 0
 174:	82 d0       	rcall	.+260    	; 0x27a <write>
		write(portd,5,h);
 176:	84 e0       	ldi	r24, 0x04	; 4
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	65 e0       	ldi	r22, 0x05	; 5
 17c:	70 e0       	ldi	r23, 0x00	; 0
 17e:	41 e0       	ldi	r20, 0x01	; 1
 180:	50 e0       	ldi	r21, 0x00	; 0
 182:	7b d0       	rcall	.+246    	; 0x27a <write>
 184:	88 e8       	ldi	r24, 0x88	; 136
 186:	93 e1       	ldi	r25, 0x13	; 19
 188:	fe 01       	movw	r30, r28
 18a:	31 97       	sbiw	r30, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <main+0x11a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 18e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 190:	d9 f7       	brne	.-10     	; 0x188 <main+0x118>
		_delay_ms(500);
		write(portb,all,h);
 192:	82 e0       	ldi	r24, 0x02	; 2
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	69 e0       	ldi	r22, 0x09	; 9
 198:	70 e0       	ldi	r23, 0x00	; 0
 19a:	41 e0       	ldi	r20, 0x01	; 1
 19c:	50 e0       	ldi	r21, 0x00	; 0
 19e:	6d d0       	rcall	.+218    	; 0x27a <write>
 1a0:	6d cf       	rjmp	.-294    	; 0x7c <main+0xc>

000001a2 <read>:
 1a2:	82 30       	cpi	r24, 0x02	; 2
 1a4:	f9 f0       	breq	.+62     	; 0x1e4 <read+0x42>
 1a6:	83 30       	cpi	r24, 0x03	; 3
 1a8:	18 f4       	brcc	.+6      	; 0x1b0 <read+0xe>
 1aa:	81 30       	cpi	r24, 0x01	; 1
 1ac:	31 f4       	brne	.+12     	; 0x1ba <read+0x18>
 1ae:	07 c0       	rjmp	.+14     	; 0x1be <read+0x1c>
 1b0:	83 30       	cpi	r24, 0x03	; 3
 1b2:	59 f1       	breq	.+86     	; 0x20a <read+0x68>
 1b4:	84 30       	cpi	r24, 0x04	; 4
 1b6:	09 f4       	brne	.+2      	; 0x1ba <read+0x18>
 1b8:	42 c0       	rjmp	.+132    	; 0x23e <read+0x9c>
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	08 95       	ret
 1be:	69 30       	cpi	r22, 0x09	; 9
 1c0:	19 f4       	brne	.+6      	; 0x1c8 <read+0x26>
 1c2:	1a ba       	out	0x1a, r1	; 26
 1c4:	89 b3       	in	r24, 0x19	; 25
 1c6:	08 95       	ret
 1c8:	8a b3       	in	r24, 0x1a	; 26
 1ca:	21 e0       	ldi	r18, 0x01	; 1
 1cc:	30 e0       	ldi	r19, 0x00	; 0
 1ce:	06 2e       	mov	r0, r22
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <read+0x34>
 1d2:	22 0f       	add	r18, r18
 1d4:	33 1f       	adc	r19, r19
 1d6:	0a 94       	dec	r0
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <read+0x30>
 1da:	20 95       	com	r18
 1dc:	28 23       	and	r18, r24
 1de:	2a bb       	out	0x1a, r18	; 26
 1e0:	89 b3       	in	r24, 0x19	; 25
 1e2:	25 c0       	rjmp	.+74     	; 0x22e <read+0x8c>
 1e4:	69 30       	cpi	r22, 0x09	; 9
 1e6:	19 f4       	brne	.+6      	; 0x1ee <read+0x4c>
 1e8:	17 ba       	out	0x17, r1	; 23
 1ea:	86 b3       	in	r24, 0x16	; 22
 1ec:	08 95       	ret
 1ee:	87 b3       	in	r24, 0x17	; 23
 1f0:	21 e0       	ldi	r18, 0x01	; 1
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	06 2e       	mov	r0, r22
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <read+0x5a>
 1f8:	22 0f       	add	r18, r18
 1fa:	33 1f       	adc	r19, r19
 1fc:	0a 94       	dec	r0
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <read+0x56>
 200:	20 95       	com	r18
 202:	28 23       	and	r18, r24
 204:	27 bb       	out	0x17, r18	; 23
 206:	86 b3       	in	r24, 0x16	; 22
 208:	12 c0       	rjmp	.+36     	; 0x22e <read+0x8c>
 20a:	69 30       	cpi	r22, 0x09	; 9
 20c:	19 f4       	brne	.+6      	; 0x214 <read+0x72>
 20e:	14 ba       	out	0x14, r1	; 20
 210:	83 b3       	in	r24, 0x13	; 19
 212:	08 95       	ret
 214:	84 b3       	in	r24, 0x14	; 20
 216:	21 e0       	ldi	r18, 0x01	; 1
 218:	30 e0       	ldi	r19, 0x00	; 0
 21a:	06 2e       	mov	r0, r22
 21c:	02 c0       	rjmp	.+4      	; 0x222 <read+0x80>
 21e:	22 0f       	add	r18, r18
 220:	33 1f       	adc	r19, r19
 222:	0a 94       	dec	r0
 224:	e2 f7       	brpl	.-8      	; 0x21e <read+0x7c>
 226:	20 95       	com	r18
 228:	28 23       	and	r18, r24
 22a:	24 bb       	out	0x14, r18	; 20
 22c:	83 b3       	in	r24, 0x13	; 19
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <read+0x94>
 232:	95 95       	asr	r25
 234:	87 95       	ror	r24
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <read+0x90>
 23a:	81 70       	andi	r24, 0x01	; 1
 23c:	08 95       	ret
 23e:	69 30       	cpi	r22, 0x09	; 9
 240:	19 f4       	brne	.+6      	; 0x248 <read+0xa6>
 242:	11 ba       	out	0x11, r1	; 17
 244:	80 b3       	in	r24, 0x10	; 16
 246:	08 95       	ret
 248:	31 b3       	in	r19, 0x11	; 17
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	06 2e       	mov	r0, r22
 250:	02 c0       	rjmp	.+4      	; 0x256 <read+0xb4>
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	0a 94       	dec	r0
 258:	e2 f7       	brpl	.-8      	; 0x252 <read+0xb0>
 25a:	28 2f       	mov	r18, r24
 25c:	20 95       	com	r18
 25e:	23 23       	and	r18, r19
 260:	21 bb       	out	0x11, r18	; 17
 262:	22 b3       	in	r18, 0x12	; 18
 264:	82 2b       	or	r24, r18
 266:	82 bb       	out	0x12, r24	; 18
 268:	80 b3       	in	r24, 0x10	; 16
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <read+0xd0>
 26e:	95 95       	asr	r25
 270:	87 95       	ror	r24
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <read+0xcc>
 276:	81 70       	andi	r24, 0x01	; 1
 278:	08 95       	ret

0000027a <write>:
 27a:	82 30       	cpi	r24, 0x02	; 2
 27c:	09 f4       	brne	.+2      	; 0x280 <write+0x6>
 27e:	41 c0       	rjmp	.+130    	; 0x302 <write+0x88>
 280:	83 30       	cpi	r24, 0x03	; 3
 282:	20 f4       	brcc	.+8      	; 0x28c <write+0x12>
 284:	81 30       	cpi	r24, 0x01	; 1
 286:	09 f0       	breq	.+2      	; 0x28a <write+0x10>
 288:	d7 c0       	rjmp	.+430    	; 0x438 <write+0x1be>
 28a:	07 c0       	rjmp	.+14     	; 0x29a <write+0x20>
 28c:	83 30       	cpi	r24, 0x03	; 3
 28e:	09 f4       	brne	.+2      	; 0x292 <write+0x18>
 290:	6c c0       	rjmp	.+216    	; 0x36a <write+0xf0>
 292:	84 30       	cpi	r24, 0x04	; 4
 294:	09 f0       	breq	.+2      	; 0x298 <write+0x1e>
 296:	d0 c0       	rjmp	.+416    	; 0x438 <write+0x1be>
 298:	9c c0       	rjmp	.+312    	; 0x3d2 <write+0x158>
 29a:	6b 35       	cpi	r22, 0x5B	; 91
 29c:	21 f4       	brne	.+8      	; 0x2a6 <write+0x2c>
 29e:	8f ef       	ldi	r24, 0xFF	; 255
 2a0:	8a bb       	out	0x1a, r24	; 26
 2a2:	4b bb       	out	0x1b, r20	; 27
 2a4:	08 95       	ret
 2a6:	44 23       	and	r20, r20
 2a8:	21 f0       	breq	.+8      	; 0x2b2 <write+0x38>
 2aa:	41 30       	cpi	r20, 0x01	; 1
 2ac:	09 f0       	breq	.+2      	; 0x2b0 <write+0x36>
 2ae:	c4 c0       	rjmp	.+392    	; 0x438 <write+0x1be>
 2b0:	14 c0       	rjmp	.+40     	; 0x2da <write+0x60>
 2b2:	69 30       	cpi	r22, 0x09	; 9
 2b4:	21 f4       	brne	.+8      	; 0x2be <write+0x44>
 2b6:	8f ef       	ldi	r24, 0xFF	; 255
 2b8:	8a bb       	out	0x1a, r24	; 26
 2ba:	1b ba       	out	0x1b, r1	; 27
 2bc:	08 95       	ret
 2be:	8a b3       	in	r24, 0x1a	; 26
 2c0:	21 e0       	ldi	r18, 0x01	; 1
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <write+0x50>
 2c6:	22 0f       	add	r18, r18
 2c8:	33 1f       	adc	r19, r19
 2ca:	6a 95       	dec	r22
 2cc:	e2 f7       	brpl	.-8      	; 0x2c6 <write+0x4c>
 2ce:	82 2b       	or	r24, r18
 2d0:	8a bb       	out	0x1a, r24	; 26
 2d2:	8b b3       	in	r24, 0x1b	; 27
 2d4:	20 95       	com	r18
 2d6:	28 23       	and	r18, r24
 2d8:	12 c0       	rjmp	.+36     	; 0x2fe <write+0x84>
 2da:	69 30       	cpi	r22, 0x09	; 9
 2dc:	21 f4       	brne	.+8      	; 0x2e6 <write+0x6c>
 2de:	8f ef       	ldi	r24, 0xFF	; 255
 2e0:	8a bb       	out	0x1a, r24	; 26
 2e2:	8b bb       	out	0x1b, r24	; 27
 2e4:	08 95       	ret
 2e6:	8a b3       	in	r24, 0x1a	; 26
 2e8:	21 e0       	ldi	r18, 0x01	; 1
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <write+0x78>
 2ee:	22 0f       	add	r18, r18
 2f0:	33 1f       	adc	r19, r19
 2f2:	6a 95       	dec	r22
 2f4:	e2 f7       	brpl	.-8      	; 0x2ee <write+0x74>
 2f6:	82 2b       	or	r24, r18
 2f8:	8a bb       	out	0x1a, r24	; 26
 2fa:	8b b3       	in	r24, 0x1b	; 27
 2fc:	28 2b       	or	r18, r24
 2fe:	2b bb       	out	0x1b, r18	; 27
 300:	08 95       	ret
 302:	6b 35       	cpi	r22, 0x5B	; 91
 304:	21 f4       	brne	.+8      	; 0x30e <write+0x94>
 306:	8f ef       	ldi	r24, 0xFF	; 255
 308:	87 bb       	out	0x17, r24	; 23
 30a:	48 bb       	out	0x18, r20	; 24
 30c:	08 95       	ret
 30e:	44 23       	and	r20, r20
 310:	21 f0       	breq	.+8      	; 0x31a <write+0xa0>
 312:	41 30       	cpi	r20, 0x01	; 1
 314:	09 f0       	breq	.+2      	; 0x318 <write+0x9e>
 316:	90 c0       	rjmp	.+288    	; 0x438 <write+0x1be>
 318:	14 c0       	rjmp	.+40     	; 0x342 <write+0xc8>
 31a:	69 30       	cpi	r22, 0x09	; 9
 31c:	21 f4       	brne	.+8      	; 0x326 <write+0xac>
 31e:	8f ef       	ldi	r24, 0xFF	; 255
 320:	87 bb       	out	0x17, r24	; 23
 322:	18 ba       	out	0x18, r1	; 24
 324:	08 95       	ret
 326:	87 b3       	in	r24, 0x17	; 23
 328:	21 e0       	ldi	r18, 0x01	; 1
 32a:	30 e0       	ldi	r19, 0x00	; 0
 32c:	02 c0       	rjmp	.+4      	; 0x332 <write+0xb8>
 32e:	22 0f       	add	r18, r18
 330:	33 1f       	adc	r19, r19
 332:	6a 95       	dec	r22
 334:	e2 f7       	brpl	.-8      	; 0x32e <write+0xb4>
 336:	82 2b       	or	r24, r18
 338:	87 bb       	out	0x17, r24	; 23
 33a:	88 b3       	in	r24, 0x18	; 24
 33c:	20 95       	com	r18
 33e:	28 23       	and	r18, r24
 340:	12 c0       	rjmp	.+36     	; 0x366 <write+0xec>
 342:	69 30       	cpi	r22, 0x09	; 9
 344:	21 f4       	brne	.+8      	; 0x34e <write+0xd4>
 346:	8f ef       	ldi	r24, 0xFF	; 255
 348:	87 bb       	out	0x17, r24	; 23
 34a:	88 bb       	out	0x18, r24	; 24
 34c:	08 95       	ret
 34e:	87 b3       	in	r24, 0x17	; 23
 350:	21 e0       	ldi	r18, 0x01	; 1
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	02 c0       	rjmp	.+4      	; 0x35a <write+0xe0>
 356:	22 0f       	add	r18, r18
 358:	33 1f       	adc	r19, r19
 35a:	6a 95       	dec	r22
 35c:	e2 f7       	brpl	.-8      	; 0x356 <write+0xdc>
 35e:	82 2b       	or	r24, r18
 360:	87 bb       	out	0x17, r24	; 23
 362:	88 b3       	in	r24, 0x18	; 24
 364:	28 2b       	or	r18, r24
 366:	28 bb       	out	0x18, r18	; 24
 368:	08 95       	ret
 36a:	6b 35       	cpi	r22, 0x5B	; 91
 36c:	21 f4       	brne	.+8      	; 0x376 <write+0xfc>
 36e:	8f ef       	ldi	r24, 0xFF	; 255
 370:	84 bb       	out	0x14, r24	; 20
 372:	45 bb       	out	0x15, r20	; 21
 374:	08 95       	ret
 376:	44 23       	and	r20, r20
 378:	21 f0       	breq	.+8      	; 0x382 <write+0x108>
 37a:	41 30       	cpi	r20, 0x01	; 1
 37c:	09 f0       	breq	.+2      	; 0x380 <write+0x106>
 37e:	5c c0       	rjmp	.+184    	; 0x438 <write+0x1be>
 380:	14 c0       	rjmp	.+40     	; 0x3aa <write+0x130>
 382:	69 30       	cpi	r22, 0x09	; 9
 384:	21 f4       	brne	.+8      	; 0x38e <write+0x114>
 386:	8f ef       	ldi	r24, 0xFF	; 255
 388:	84 bb       	out	0x14, r24	; 20
 38a:	15 ba       	out	0x15, r1	; 21
 38c:	08 95       	ret
 38e:	84 b3       	in	r24, 0x14	; 20
 390:	21 e0       	ldi	r18, 0x01	; 1
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	02 c0       	rjmp	.+4      	; 0x39a <write+0x120>
 396:	22 0f       	add	r18, r18
 398:	33 1f       	adc	r19, r19
 39a:	6a 95       	dec	r22
 39c:	e2 f7       	brpl	.-8      	; 0x396 <write+0x11c>
 39e:	82 2b       	or	r24, r18
 3a0:	84 bb       	out	0x14, r24	; 20
 3a2:	85 b3       	in	r24, 0x15	; 21
 3a4:	20 95       	com	r18
 3a6:	28 23       	and	r18, r24
 3a8:	12 c0       	rjmp	.+36     	; 0x3ce <write+0x154>
 3aa:	69 30       	cpi	r22, 0x09	; 9
 3ac:	21 f4       	brne	.+8      	; 0x3b6 <write+0x13c>
 3ae:	8f ef       	ldi	r24, 0xFF	; 255
 3b0:	84 bb       	out	0x14, r24	; 20
 3b2:	85 bb       	out	0x15, r24	; 21
 3b4:	08 95       	ret
 3b6:	84 b3       	in	r24, 0x14	; 20
 3b8:	21 e0       	ldi	r18, 0x01	; 1
 3ba:	30 e0       	ldi	r19, 0x00	; 0
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <write+0x148>
 3be:	22 0f       	add	r18, r18
 3c0:	33 1f       	adc	r19, r19
 3c2:	6a 95       	dec	r22
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <write+0x144>
 3c6:	82 2b       	or	r24, r18
 3c8:	84 bb       	out	0x14, r24	; 20
 3ca:	85 b3       	in	r24, 0x15	; 21
 3cc:	28 2b       	or	r18, r24
 3ce:	25 bb       	out	0x15, r18	; 21
 3d0:	08 95       	ret
 3d2:	6b 35       	cpi	r22, 0x5B	; 91
 3d4:	21 f4       	brne	.+8      	; 0x3de <write+0x164>
 3d6:	8f ef       	ldi	r24, 0xFF	; 255
 3d8:	81 bb       	out	0x11, r24	; 17
 3da:	42 bb       	out	0x12, r20	; 18
 3dc:	08 95       	ret
 3de:	44 23       	and	r20, r20
 3e0:	19 f0       	breq	.+6      	; 0x3e8 <write+0x16e>
 3e2:	41 30       	cpi	r20, 0x01	; 1
 3e4:	49 f5       	brne	.+82     	; 0x438 <write+0x1be>
 3e6:	15 c0       	rjmp	.+42     	; 0x412 <write+0x198>
 3e8:	69 30       	cpi	r22, 0x09	; 9
 3ea:	21 f4       	brne	.+8      	; 0x3f4 <write+0x17a>
 3ec:	8f ef       	ldi	r24, 0xFF	; 255
 3ee:	81 bb       	out	0x11, r24	; 17
 3f0:	12 ba       	out	0x12, r1	; 18
 3f2:	08 95       	ret
 3f4:	81 b3       	in	r24, 0x11	; 17
 3f6:	21 e0       	ldi	r18, 0x01	; 1
 3f8:	30 e0       	ldi	r19, 0x00	; 0
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <write+0x186>
 3fc:	22 0f       	add	r18, r18
 3fe:	33 1f       	adc	r19, r19
 400:	6a 95       	dec	r22
 402:	e2 f7       	brpl	.-8      	; 0x3fc <write+0x182>
 404:	82 2b       	or	r24, r18
 406:	81 bb       	out	0x11, r24	; 17
 408:	82 b3       	in	r24, 0x12	; 18
 40a:	20 95       	com	r18
 40c:	28 23       	and	r18, r24
 40e:	22 bb       	out	0x12, r18	; 18
 410:	08 95       	ret
 412:	69 30       	cpi	r22, 0x09	; 9
 414:	21 f4       	brne	.+8      	; 0x41e <write+0x1a4>
 416:	8f ef       	ldi	r24, 0xFF	; 255
 418:	81 bb       	out	0x11, r24	; 17
 41a:	82 bb       	out	0x12, r24	; 18
 41c:	08 95       	ret
 41e:	81 b3       	in	r24, 0x11	; 17
 420:	21 e0       	ldi	r18, 0x01	; 1
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	02 c0       	rjmp	.+4      	; 0x42a <write+0x1b0>
 426:	22 0f       	add	r18, r18
 428:	33 1f       	adc	r19, r19
 42a:	6a 95       	dec	r22
 42c:	e2 f7       	brpl	.-8      	; 0x426 <write+0x1ac>
 42e:	82 2b       	or	r24, r18
 430:	81 bb       	out	0x11, r24	; 17
 432:	82 b3       	in	r24, 0x12	; 18
 434:	28 2b       	or	r18, r24
 436:	22 bb       	out	0x12, r18	; 18
 438:	08 95       	ret

0000043a <direction>:
 43a:	83 30       	cpi	r24, 0x03	; 3
 43c:	19 f1       	breq	.+70     	; 0x484 <__stack+0x25>
 43e:	84 30       	cpi	r24, 0x04	; 4
 440:	09 f4       	brne	.+2      	; 0x444 <direction+0xa>
 442:	3c c0       	rjmp	.+120    	; 0x4bc <__stack+0x5d>
 444:	82 30       	cpi	r24, 0x02	; 2
 446:	09 f0       	breq	.+2      	; 0x44a <direction+0x10>
 448:	54 c0       	rjmp	.+168    	; 0x4f2 <__stack+0x93>
 44a:	44 23       	and	r20, r20
 44c:	21 f0       	breq	.+8      	; 0x456 <direction+0x1c>
 44e:	41 30       	cpi	r20, 0x01	; 1
 450:	09 f0       	breq	.+2      	; 0x454 <direction+0x1a>
 452:	4f c0       	rjmp	.+158    	; 0x4f2 <__stack+0x93>
 454:	0c c0       	rjmp	.+24     	; 0x46e <__stack+0xf>
 456:	27 b3       	in	r18, 0x17	; 23
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	02 c0       	rjmp	.+4      	; 0x462 <__stack+0x3>
 45e:	88 0f       	add	r24, r24
 460:	99 1f       	adc	r25, r25
 462:	6a 95       	dec	r22
 464:	e2 f7       	brpl	.-8      	; 0x45e <direction+0x24>
 466:	80 95       	com	r24
 468:	82 23       	and	r24, r18
 46a:	87 bb       	out	0x17, r24	; 23
 46c:	08 95       	ret
 46e:	27 b3       	in	r18, 0x17	; 23
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	02 c0       	rjmp	.+4      	; 0x47a <__stack+0x1b>
 476:	88 0f       	add	r24, r24
 478:	99 1f       	adc	r25, r25
 47a:	6a 95       	dec	r22
 47c:	e2 f7       	brpl	.-8      	; 0x476 <__stack+0x17>
 47e:	28 2b       	or	r18, r24
 480:	27 bb       	out	0x17, r18	; 23
 482:	08 95       	ret
 484:	44 23       	and	r20, r20
 486:	19 f0       	breq	.+6      	; 0x48e <__stack+0x2f>
 488:	41 30       	cpi	r20, 0x01	; 1
 48a:	99 f5       	brne	.+102    	; 0x4f2 <__stack+0x93>
 48c:	0c c0       	rjmp	.+24     	; 0x4a6 <__stack+0x47>
 48e:	24 b3       	in	r18, 0x14	; 20
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	02 c0       	rjmp	.+4      	; 0x49a <__stack+0x3b>
 496:	88 0f       	add	r24, r24
 498:	99 1f       	adc	r25, r25
 49a:	6a 95       	dec	r22
 49c:	e2 f7       	brpl	.-8      	; 0x496 <__stack+0x37>
 49e:	80 95       	com	r24
 4a0:	82 23       	and	r24, r18
 4a2:	84 bb       	out	0x14, r24	; 20
 4a4:	08 95       	ret
 4a6:	24 b3       	in	r18, 0x14	; 20
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__stack+0x53>
 4ae:	88 0f       	add	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	6a 95       	dec	r22
 4b4:	e2 f7       	brpl	.-8      	; 0x4ae <__stack+0x4f>
 4b6:	28 2b       	or	r18, r24
 4b8:	24 bb       	out	0x14, r18	; 20
 4ba:	08 95       	ret
 4bc:	44 23       	and	r20, r20
 4be:	19 f0       	breq	.+6      	; 0x4c6 <__stack+0x67>
 4c0:	41 30       	cpi	r20, 0x01	; 1
 4c2:	b9 f4       	brne	.+46     	; 0x4f2 <__stack+0x93>
 4c4:	0c c0       	rjmp	.+24     	; 0x4de <__stack+0x7f>
 4c6:	21 b3       	in	r18, 0x11	; 17
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	02 c0       	rjmp	.+4      	; 0x4d2 <__stack+0x73>
 4ce:	88 0f       	add	r24, r24
 4d0:	99 1f       	adc	r25, r25
 4d2:	6a 95       	dec	r22
 4d4:	e2 f7       	brpl	.-8      	; 0x4ce <__stack+0x6f>
 4d6:	80 95       	com	r24
 4d8:	82 23       	and	r24, r18
 4da:	81 bb       	out	0x11, r24	; 17
 4dc:	08 95       	ret
 4de:	21 b3       	in	r18, 0x11	; 17
 4e0:	81 e0       	ldi	r24, 0x01	; 1
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	02 c0       	rjmp	.+4      	; 0x4ea <__stack+0x8b>
 4e6:	88 0f       	add	r24, r24
 4e8:	99 1f       	adc	r25, r25
 4ea:	6a 95       	dec	r22
 4ec:	e2 f7       	brpl	.-8      	; 0x4e6 <__stack+0x87>
 4ee:	28 2b       	or	r18, r24
 4f0:	21 bb       	out	0x11, r18	; 17
 4f2:	08 95       	ret

000004f4 <serial_select>:
 4f4:	88 23       	and	r24, r24
 4f6:	21 f4       	brne	.+8      	; 0x500 <serial_select+0xc>
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	67 e0       	ldi	r22, 0x07	; 7
 4fc:	40 e0       	ldi	r20, 0x00	; 0
 4fe:	04 c0       	rjmp	.+8      	; 0x508 <serial_select+0x14>
 500:	81 30       	cpi	r24, 0x01	; 1
 502:	41 f4       	brne	.+16     	; 0x514 <serial_select+0x20>
 504:	67 e0       	ldi	r22, 0x07	; 7
 506:	41 e0       	ldi	r20, 0x01	; 1
 508:	0e 94 3d 01 	call	0x27a	; 0x27a <write>
 50c:	83 e0       	ldi	r24, 0x03	; 3
 50e:	62 e0       	ldi	r22, 0x02	; 2
 510:	40 e0       	ldi	r20, 0x00	; 0
 512:	0a c0       	rjmp	.+20     	; 0x528 <serial_select+0x34>
 514:	82 30       	cpi	r24, 0x02	; 2
 516:	59 f4       	brne	.+22     	; 0x52e <serial_select+0x3a>
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	67 e0       	ldi	r22, 0x07	; 7
 51c:	40 e0       	ldi	r20, 0x00	; 0
 51e:	0e 94 3d 01 	call	0x27a	; 0x27a <write>
 522:	83 e0       	ldi	r24, 0x03	; 3
 524:	62 e0       	ldi	r22, 0x02	; 2
 526:	41 e0       	ldi	r20, 0x01	; 1
 528:	0e 94 3d 01 	call	0x27a	; 0x27a <write>
 52c:	08 95       	ret
 52e:	83 30       	cpi	r24, 0x03	; 3
 530:	51 f4       	brne	.+20     	; 0x546 <serial_select+0x52>
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	67 e0       	ldi	r22, 0x07	; 7
 536:	41 e0       	ldi	r20, 0x01	; 1
 538:	0e 94 3d 01 	call	0x27a	; 0x27a <write>
 53c:	83 e0       	ldi	r24, 0x03	; 3
 53e:	62 e0       	ldi	r22, 0x02	; 2
 540:	41 e0       	ldi	r20, 0x01	; 1
 542:	0e 94 3d 01 	call	0x27a	; 0x27a <write>
 546:	08 95       	ret

00000548 <jsonparser>:
 548:	ef 92       	push	r14
 54a:	ff 92       	push	r15
 54c:	0f 93       	push	r16
 54e:	1f 93       	push	r17
 550:	cf 93       	push	r28
 552:	df 93       	push	r29
 554:	ea 01       	movw	r28, r20
 556:	0e 94 63 03 	call	0x6c6	; 0x6c6 <strstr>
 55a:	00 97       	sbiw	r24, 0x00	; 0
 55c:	19 f4       	brne	.+6      	; 0x564 <jsonparser+0x1c>
 55e:	20 e0       	ldi	r18, 0x00	; 0
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	1d c0       	rjmp	.+58     	; 0x59e <jsonparser+0x56>
 564:	01 96       	adiw	r24, 0x01	; 1
 566:	60 e6       	ldi	r22, 0x60	; 96
 568:	70 e0       	ldi	r23, 0x00	; 0
 56a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <strstr>
 56e:	7c 01       	movw	r14, r24
 570:	83 e0       	ldi	r24, 0x03	; 3
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	e8 0e       	add	r14, r24
 576:	f9 1e       	adc	r15, r25
 578:	c7 01       	movw	r24, r14
 57a:	62 e2       	ldi	r22, 0x22	; 34
 57c:	70 e0       	ldi	r23, 0x00	; 0
 57e:	0e 94 31 03 	call	0x662	; 0x662 <strchr>
 582:	8c 01       	movw	r16, r24
 584:	0e 19       	sub	r16, r14
 586:	1f 09       	sbc	r17, r15
 588:	ce 01       	movw	r24, r28
 58a:	b7 01       	movw	r22, r14
 58c:	a8 01       	movw	r20, r16
 58e:	0e 94 54 03 	call	0x6a8	; 0x6a8 <strncpy>
 592:	0c 0f       	add	r16, r28
 594:	1d 1f       	adc	r17, r29
 596:	f8 01       	movw	r30, r16
 598:	10 82       	st	Z, r1
 59a:	21 e0       	ldi	r18, 0x01	; 1
 59c:	30 e0       	ldi	r19, 0x00	; 0
 59e:	c9 01       	movw	r24, r18
 5a0:	df 91       	pop	r29
 5a2:	cf 91       	pop	r28
 5a4:	1f 91       	pop	r17
 5a6:	0f 91       	pop	r16
 5a8:	ff 90       	pop	r15
 5aa:	ef 90       	pop	r14
 5ac:	08 95       	ret

000005ae <compare>:
 5ae:	db 01       	movw	r26, r22
 5b0:	0d 90       	ld	r0, X+
 5b2:	00 20       	and	r0, r0
 5b4:	e9 f7       	brne	.-6      	; 0x5b0 <compare+0x2>
 5b6:	11 97       	sbiw	r26, 0x01	; 1
 5b8:	a6 1b       	sub	r26, r22
 5ba:	b7 0b       	sbc	r27, r23
 5bc:	4a 2f       	mov	r20, r26
 5be:	50 e0       	ldi	r21, 0x00	; 0
 5c0:	0e 94 3c 03 	call	0x678	; 0x678 <strncasecmp>
 5c4:	20 e0       	ldi	r18, 0x00	; 0
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	89 2b       	or	r24, r25
 5ca:	11 f4       	brne	.+4      	; 0x5d0 <compare+0x22>
 5cc:	21 e0       	ldi	r18, 0x01	; 1
 5ce:	30 e0       	ldi	r19, 0x00	; 0
 5d0:	c9 01       	movw	r24, r18
 5d2:	08 95       	ret

000005d4 <str_num>:
 5d4:	0e 94 14 03 	call	0x628	; 0x628 <atoi>
 5d8:	08 95       	ret

000005da <__divmodhi4>:
 5da:	97 fb       	bst	r25, 7
 5dc:	09 2e       	mov	r0, r25
 5de:	07 26       	eor	r0, r23
 5e0:	0a d0       	rcall	.+20     	; 0x5f6 <__divmodhi4_neg1>
 5e2:	77 fd       	sbrc	r23, 7
 5e4:	04 d0       	rcall	.+8      	; 0x5ee <__divmodhi4_neg2>
 5e6:	0c d0       	rcall	.+24     	; 0x600 <__udivmodhi4>
 5e8:	06 d0       	rcall	.+12     	; 0x5f6 <__divmodhi4_neg1>
 5ea:	00 20       	and	r0, r0
 5ec:	1a f4       	brpl	.+6      	; 0x5f4 <__divmodhi4_exit>

000005ee <__divmodhi4_neg2>:
 5ee:	70 95       	com	r23
 5f0:	61 95       	neg	r22
 5f2:	7f 4f       	sbci	r23, 0xFF	; 255

000005f4 <__divmodhi4_exit>:
 5f4:	08 95       	ret

000005f6 <__divmodhi4_neg1>:
 5f6:	f6 f7       	brtc	.-4      	; 0x5f4 <__divmodhi4_exit>
 5f8:	90 95       	com	r25
 5fa:	81 95       	neg	r24
 5fc:	9f 4f       	sbci	r25, 0xFF	; 255
 5fe:	08 95       	ret

00000600 <__udivmodhi4>:
 600:	aa 1b       	sub	r26, r26
 602:	bb 1b       	sub	r27, r27
 604:	51 e1       	ldi	r21, 0x11	; 17
 606:	07 c0       	rjmp	.+14     	; 0x616 <__udivmodhi4_ep>

00000608 <__udivmodhi4_loop>:
 608:	aa 1f       	adc	r26, r26
 60a:	bb 1f       	adc	r27, r27
 60c:	a6 17       	cp	r26, r22
 60e:	b7 07       	cpc	r27, r23
 610:	10 f0       	brcs	.+4      	; 0x616 <__udivmodhi4_ep>
 612:	a6 1b       	sub	r26, r22
 614:	b7 0b       	sbc	r27, r23

00000616 <__udivmodhi4_ep>:
 616:	88 1f       	adc	r24, r24
 618:	99 1f       	adc	r25, r25
 61a:	5a 95       	dec	r21
 61c:	a9 f7       	brne	.-22     	; 0x608 <__udivmodhi4_loop>
 61e:	80 95       	com	r24
 620:	90 95       	com	r25
 622:	bc 01       	movw	r22, r24
 624:	cd 01       	movw	r24, r26
 626:	08 95       	ret

00000628 <atoi>:
 628:	fc 01       	movw	r30, r24
 62a:	88 27       	eor	r24, r24
 62c:	99 27       	eor	r25, r25
 62e:	e8 94       	clt
 630:	21 91       	ld	r18, Z+
 632:	20 32       	cpi	r18, 0x20	; 32
 634:	e9 f3       	breq	.-6      	; 0x630 <atoi+0x8>
 636:	29 30       	cpi	r18, 0x09	; 9
 638:	10 f0       	brcs	.+4      	; 0x63e <atoi+0x16>
 63a:	2e 30       	cpi	r18, 0x0E	; 14
 63c:	c8 f3       	brcs	.-14     	; 0x630 <atoi+0x8>
 63e:	2b 32       	cpi	r18, 0x2B	; 43
 640:	39 f0       	breq	.+14     	; 0x650 <atoi+0x28>
 642:	2d 32       	cpi	r18, 0x2D	; 45
 644:	31 f4       	brne	.+12     	; 0x652 <atoi+0x2a>
 646:	68 94       	set
 648:	03 c0       	rjmp	.+6      	; 0x650 <atoi+0x28>
 64a:	57 d0       	rcall	.+174    	; 0x6fa <__mulhi_const_10>
 64c:	82 0f       	add	r24, r18
 64e:	91 1d       	adc	r25, r1
 650:	21 91       	ld	r18, Z+
 652:	20 53       	subi	r18, 0x30	; 48
 654:	2a 30       	cpi	r18, 0x0A	; 10
 656:	c8 f3       	brcs	.-14     	; 0x64a <atoi+0x22>
 658:	1e f4       	brtc	.+6      	; 0x660 <atoi+0x38>
 65a:	90 95       	com	r25
 65c:	81 95       	neg	r24
 65e:	9f 4f       	sbci	r25, 0xFF	; 255
 660:	08 95       	ret

00000662 <strchr>:
 662:	fc 01       	movw	r30, r24
 664:	81 91       	ld	r24, Z+
 666:	86 17       	cp	r24, r22
 668:	21 f0       	breq	.+8      	; 0x672 <strchr+0x10>
 66a:	88 23       	and	r24, r24
 66c:	d9 f7       	brne	.-10     	; 0x664 <strchr+0x2>
 66e:	99 27       	eor	r25, r25
 670:	08 95       	ret
 672:	31 97       	sbiw	r30, 0x01	; 1
 674:	cf 01       	movw	r24, r30
 676:	08 95       	ret

00000678 <strncasecmp>:
 678:	fb 01       	movw	r30, r22
 67a:	dc 01       	movw	r26, r24
 67c:	41 50       	subi	r20, 0x01	; 1
 67e:	50 40       	sbci	r21, 0x00	; 0
 680:	88 f0       	brcs	.+34     	; 0x6a4 <strncasecmp+0x2c>
 682:	8d 91       	ld	r24, X+
 684:	81 34       	cpi	r24, 0x41	; 65
 686:	1c f0       	brlt	.+6      	; 0x68e <strncasecmp+0x16>
 688:	8b 35       	cpi	r24, 0x5B	; 91
 68a:	0c f4       	brge	.+2      	; 0x68e <strncasecmp+0x16>
 68c:	80 5e       	subi	r24, 0xE0	; 224
 68e:	61 91       	ld	r22, Z+
 690:	61 34       	cpi	r22, 0x41	; 65
 692:	1c f0       	brlt	.+6      	; 0x69a <strncasecmp+0x22>
 694:	6b 35       	cpi	r22, 0x5B	; 91
 696:	0c f4       	brge	.+2      	; 0x69a <strncasecmp+0x22>
 698:	60 5e       	subi	r22, 0xE0	; 224
 69a:	86 1b       	sub	r24, r22
 69c:	61 11       	cpse	r22, r1
 69e:	71 f3       	breq	.-36     	; 0x67c <strncasecmp+0x4>
 6a0:	99 0b       	sbc	r25, r25
 6a2:	08 95       	ret
 6a4:	88 1b       	sub	r24, r24
 6a6:	fc cf       	rjmp	.-8      	; 0x6a0 <strncasecmp+0x28>

000006a8 <strncpy>:
 6a8:	fb 01       	movw	r30, r22
 6aa:	dc 01       	movw	r26, r24
 6ac:	41 50       	subi	r20, 0x01	; 1
 6ae:	50 40       	sbci	r21, 0x00	; 0
 6b0:	48 f0       	brcs	.+18     	; 0x6c4 <strncpy+0x1c>
 6b2:	01 90       	ld	r0, Z+
 6b4:	0d 92       	st	X+, r0
 6b6:	00 20       	and	r0, r0
 6b8:	c9 f7       	brne	.-14     	; 0x6ac <strncpy+0x4>
 6ba:	01 c0       	rjmp	.+2      	; 0x6be <strncpy+0x16>
 6bc:	1d 92       	st	X+, r1
 6be:	41 50       	subi	r20, 0x01	; 1
 6c0:	50 40       	sbci	r21, 0x00	; 0
 6c2:	e0 f7       	brcc	.-8      	; 0x6bc <strncpy+0x14>
 6c4:	08 95       	ret

000006c6 <strstr>:
 6c6:	fb 01       	movw	r30, r22
 6c8:	51 91       	ld	r21, Z+
 6ca:	55 23       	and	r21, r21
 6cc:	a9 f0       	breq	.+42     	; 0x6f8 <strstr+0x32>
 6ce:	bf 01       	movw	r22, r30
 6d0:	dc 01       	movw	r26, r24
 6d2:	4d 91       	ld	r20, X+
 6d4:	45 17       	cp	r20, r21
 6d6:	41 11       	cpse	r20, r1
 6d8:	e1 f7       	brne	.-8      	; 0x6d2 <strstr+0xc>
 6da:	59 f4       	brne	.+22     	; 0x6f2 <strstr+0x2c>
 6dc:	cd 01       	movw	r24, r26
 6de:	01 90       	ld	r0, Z+
 6e0:	00 20       	and	r0, r0
 6e2:	49 f0       	breq	.+18     	; 0x6f6 <strstr+0x30>
 6e4:	4d 91       	ld	r20, X+
 6e6:	40 15       	cp	r20, r0
 6e8:	41 11       	cpse	r20, r1
 6ea:	c9 f3       	breq	.-14     	; 0x6de <strstr+0x18>
 6ec:	fb 01       	movw	r30, r22
 6ee:	41 11       	cpse	r20, r1
 6f0:	ef cf       	rjmp	.-34     	; 0x6d0 <strstr+0xa>
 6f2:	81 e0       	ldi	r24, 0x01	; 1
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	01 97       	sbiw	r24, 0x01	; 1
 6f8:	08 95       	ret

000006fa <__mulhi_const_10>:
 6fa:	7a e0       	ldi	r23, 0x0A	; 10
 6fc:	97 9f       	mul	r25, r23
 6fe:	90 2d       	mov	r25, r0
 700:	87 9f       	mul	r24, r23
 702:	80 2d       	mov	r24, r0
 704:	91 0d       	add	r25, r1
 706:	11 24       	eor	r1, r1
 708:	08 95       	ret

0000070a <_exit>:
 70a:	f8 94       	cli

0000070c <__stop_program>:
 70c:	ff cf       	rjmp	.-2      	; 0x70c <__stop_program>
